/// Components are the main way to make changes to pages. A widget or a set of
/// widgets together make a component in CSS.
/// In PDS we use BEM. Search for BEM CSS online to find out more. For now it's
/// important to understand the basics.
/// All PDS components and utilities are prepended with `pds-`. All your classes
/// will be prepended with `mps-`. This is done to mark them as something you
/// wrote yourself. This is because Mendix has many places where CSS can come
/// from like widgets and other modules.
/// All files are also encapsulated with `#mxapp {}` to make sure your styling
/// takes precendence over other styling.
/// It's also important to load the file in _mps.scss after you have created it.
/// When possible use the constants, functions and mixins in PDS. They can be
/// found in `platformdesignsystem/web/[constants/functions/mixins]`

/// @example #mxapp {
///            // This is the block. There is only one per file. The name of
///            // the block is identical to the file: `_mps-example.scss`
///            .mps-example {
///              color: var(--grey-10);
///
///              // This is an element. It is a child element of the block.
///              // Every element in the block is named directly after the
///              // block. The elements are NEVER nested as &__element__element.
///              &__element {
///                width: 1rem;
///
///                // In some cases you want to override an element. This is
///                done using a modifier. The whole class now looks like
///                follows: .block__element--modifier
///                This way you can always see what is being adjusted. Blocks
///                can also directly be modified. That looks as follows:
///                .block--modifier
///                &--modifier {
///                  width: 2rem;
///                }
///              }
///            }
///          }
