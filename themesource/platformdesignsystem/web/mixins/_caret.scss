/// Creates a caret on an element as a pseudo element.
/// A caret looks like this < or /\.
/// @example @include closed-caret();
/// @example @include closed-caret($direction: left, $type: after, $size: size.$x24);
/// @tag tag-caret tag-open-caret tag-close-caret tag-arrow tag-square-bracket tag-angle-bracket

@use "../constants/border-width";
@use "../constants/size";
@use "../constants/spacing";

// stylelint-disable
// prettier-ignore
@mixin closed-caret($direction: down, $type: after, $size: .375rem, $margin: 0, $color: var(--colorPrimary), $position: relative, $float: none, $dy: 0, $cursor: pointer) {
  &:#{$type} {
    content: "";
    $rotation: nth((270deg, 0deg, 90deg, 180deg), index((right, down, left, up), $direction));
    display: inline-block;
    position: $position;
    margin: $margin;
    width: 0;
    height: 0;
    float: #{$float};
    border-top: $size solid;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid transparent;
    border-top-color: #{$color};
    transform: rotate($rotation) translateY(#{$dy});
    cursor: $cursor;
  }
}

// prettier-ignore
@mixin open-caret($direction: right, $type: before, $size: 0.5rem, $margin: 0.25rem 0.5rem, $border: border-width.$x1, $color: var(--grey-5), $position: relative, $y: top, $yd: 0, $x: left, $xd: 0, $cursor: pointer) {
  &:#{$type} {
    content: "";
    $adjecent: nth((top, right, bottom, left), index((right, bottom, left, top), $direction));
    display: inline-block;
    position: $position;
    margin: $margin;
    width: $size;
    height: $size;
    border-#{$direction}: $border solid;
    border-#{$adjecent}: $border solid;
    transform: rotate(45deg);
    border-color: #{$color};
    cursor: $cursor;
  }
}
