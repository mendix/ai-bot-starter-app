@use "../constants/border-radius";
@use "../constants/spacing";
@use "../constants/size";
@use "../constants/animation";
@use "../functions";
@use "sass:math";

$_tooltip-distance: spacing.$sm; // Distance from the tooltipped element
$_pointer-size: $_tooltip-distance; // calc($_tooltip-distance + 1px); // Otherwise a 1px gap appears at some zoom levels.
$_pointer-offset: calc($_pointer-size * -1); // The distance offset to make it look like a pointer
$_pointer-center: calc(50% - $_pointer-size / 2); // Use transform: translate() to align pointer to center of element.

/// Give an element tooltipability.
/// @param {Boolean} $hoverable [true] - if set to false requires `--active` modifier to display tooltip. You must handle toggling this class yourself in your own widget code or custom action.
/// @output - Creates the following classes based on parent selector `&`
/// | Class                       | Description                                                                          |
/// | --------------------------- | ------------------------------------------------------------------------------------ |
/// | `&__tip`          | The element which diplays the Tooltip content.                                       |
/// | `&--top`          | Default. Tooltip is center aligned on top of content.                               |
/// | `&--bottom`       | Tooltip is center aligned below content.                                             |
/// | `&--left`         | Tooltip is center aligned to the left.                                               |
/// | `&--right`        | Tooltip is center aligned to the right.                                              |
/// | `&--top-left`     | Tooltip is on top, extends to the left and right-aligned with content.               |
/// | `&--top-right`    | Tooltip is on top, extends to the right and left-aligned with content.               |
/// | `&--bottom-left`  | Tooltip is below, extends to the left and right-aligned with content.                |
/// | `&--bottom-right` | Tooltip is below, extends to the right and left-aligned with content.                |
/// | `&--delay`        | Increases default from delay from .2s to .5s.                                        |
/// | `&--active`        | Display the tooltip.                               |
/// @tag tag-feedback tag-hoverable tag-popover
@mixin make-tooltip($hoverable: true) {
  $block: functions.last-selector(&);

  --tooltip-opacity: 0;
  --tooltip-visibility: hidden;
  --tooltip-top: auto;
  --tooltip-bottom: calc(100% + #{$_tooltip-distance});
  --tooltip-left: 50%;
  --tooltip-right: auto;
  --scale: scale(0.9);
  --translate: translateX(-50%);
  --transform-origin: bottom;
  --tooltip-transform: var(--translate) var(--scale);
  --tooltip-delay: #{if($hoverable, 0.2s, 0s)};
  display: inline-block;
  position: relative;
  vertical-align: top;

  &::after {
    content: "";
    position: absolute;
    border: calc($_pointer-size / 2) solid transparent;
    border-top-color: var(--background-contrast);
    top: $_pointer-offset;
    left: $_pointer-center;
    pointer-events: none;
    opacity: var(--tooltip-opacity);
    z-index: 1;
    transform: scale(1, 0);
    transform-origin: top;
    transition: {
      property: transform, opacity;
      duration: animation.$duration-fast;
      timing-function: ease-in;
    }
  }

  &--delay {
    --tooltip-delay: 0.5s;
  }

  &--top,
  &--top-left,
  &--top-right {
    &::after {
      transform: scale(1, 0);
      transform-origin: top;
      top: $_pointer-offset;
      left: $_pointer-center;
    }
  }

  &--top-left,
  &--bottom-left {
    --tooltip-left: auto;
    --tooltip-right: 0;
    --translate: ;
  }

  &--top-right,
  &--bottom-right {
    --tooltip-left: 0;
    --tooltip-right: auto;
    --translate: ;
  }

  &--bottom,
  &--bottom-left,
  &--bottom-right {
    --tooltip-top: calc(100% + #{$_tooltip-distance});
    --tooltip-bottom: auto;

    &::after {
      transform: scale(1, 0);
      transform-origin: bottom;
      top: auto;
      bottom: $_pointer-offset;
      border-bottom-color: var(--background-contrast);
      border-top-color: transparent;
    }
  }

  &--left {
    --tooltip-top: 50%;
    --tooltip-bottom: auto;
    --tooltip-left: auto;
    --tooltip-right: calc(100% + #{$_tooltip-distance});
    --translate: translateY(-50%);
    --transform-origin: right;

    &::after {
      top: $_pointer-center;
      left: $_pointer-offset;
      border-left-color: var(--background-contrast);
      border-top-color: transparent;
      transform: scale(0, 1);
      transform-origin: left;
    }
  }

  &--right {
    --tooltip-top: 50%;
    --tooltip-bottom: auto;
    --tooltip-left: calc(100% + #{$_tooltip-distance});
    --tooltip-right: auto;
    --translate: translateY(-50%);
    --transform-origin: left;

    &::after {
      top: $_pointer-center;
      right: $_pointer-offset;
      left: auto;
      border-right-color: var(--background-contrast);
      border-top-color: transparent;
      transform: scale(0, 1);
      transform-origin: right;
    }
  }

  &--top-right {
    --transform-origin: bottom left;
  }

  &--top-left {
    --transform-origin: bottom right;
  }

  &--bottom {
    --transform-origin: top;
  }

  &--bottom-right {
    --transform-origin: top left;
  }

  &--bottom-left {
    --transform-origin: top right;
  }

  &--active {
    --tooltip-opacity: 1;
    --tooltip-visibility: visible;
    --scale: scale(1);

    #{$block}__tip {
      transition-delay: var(--tooltip-delay);
      transition-timing-function: ease-out;
    }

    &::after {
      transform: scale(1, 1);
      transition-delay: calc(var(--tooltip-delay));
      transition-timing-function: ease-out;
    }
  }

  @if $hoverable {
    &:hover,
    &:focus-visible,
    &:focus-within {
      @extend #{$block}--active;
    }
  }

  &__tip {
    background-color: var(--background-contrast);
    border-radius: border-radius.$regular;
    color: var(--text-body-inverse);
    font-size: functions.font-size(12);
    padding: spacing.$xs spacing.$sm;
    position: absolute;
    width: max-content;
    max-width: size.$x240;
    white-space: normal;
    z-index: 1;
    box-shadow: var(--shadow-elevation-4);
    opacity: var(--tooltip-opacity);
    visibility: var(--tooltip-visibility);
    transition: {
      property: opacity, visibility, transform;
      duration: animation.$duration-fast;
      timing-function: ease-in;
    }
    top: var(--tooltip-top);
    bottom: var(--tooltip-bottom);
    left: var(--tooltip-left);
    right: var(--tooltip-right);
    transform: var(--tooltip-transform);
    transform-origin: var(--transform-origin);

    &::before {
      content: "";
      position: absolute;
      top: -$_tooltip-distance;
      bottom: -$_tooltip-distance;
      left: -$_tooltip-distance;
      right: -$_tooltip-distance;
    }

    // zero any last child margin
    > :last-child {
      margin-bottom: 0;
    }
  }
}
