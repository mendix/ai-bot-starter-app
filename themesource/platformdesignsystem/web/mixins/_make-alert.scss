/// Styles an element as an alert. By default uses info variant unless otherwise specified.
/// @param {String | null} $variant ["info"] One of "info", "success", "warning", "danger", null.
/// @param {Boolean} $include-common-styles [true] Include common styles for all variants. Set to false if defining modifier classes where common styles already exist on the base class.
/// @since 32.0.0
/// @tag tag-bar tag-alert tag-warn tag-warning tag-focus tag-attention tag-message tag-callout tag-feedback

@use "sass:list";
@use "sass:map";
@use "../constants/spacing";
@use "../constants/size";
@use "../constants/layout";
@use "../constants/border-radius";
@use "../constants/font-size";
@use "../mixins/icon" as *;

$_variants: (
  "info": (
    "background-color": var(--blue-1),
    "border-color": var(--blue-2),
    "icon-color": var(--blue-7),
    "icon": "information-circle",
  ),
  "success": (
    "background-color": var(--green-1),
    "border-color": var(--green-2),
    "icon-color": var(--green-8),
    "icon": "check-circle-1",
  ),
  "warning": (
    "background-color": var(--yellow-1),
    "border-color": var(--yellow-2),
    "icon-color": var(--yellow-8),
    "icon": "alert-triangle",
  ),
  "danger": (
    "background-color": var(--red-1),
    "border-color": var(--red-2),
    "icon-color": var(--red-7),
    "icon": "alert-circle",
  ),
);
$_valid: map.keys($_variants);
$_icon-size: size.$x20;
$_icon-margin: spacing.$x12;
$_padding: layout.$padding-alert;

@mixin make-alert($variant: "info", $include-common-styles: true) {
  @if not list.index($_valid, $variant) {
    @error "Invalid variant #{$variant}, please use one of #{$_valid} instead.";
  }
  @if $include-common-styles {
    position: relative;
    padding: $_padding;
    border-radius: border-radius.$regular;
    border: 1px solid transparent;
    font-size: font-size.$body;
  }
  background-color: map.get($_variants, $variant, "background-color");
  border-color: map.get($_variants, $variant, "border-color");
  padding-left: $_padding + $_icon-size + $_icon-margin;

  &::before {
    @include icon($name: map.get($_variants, $variant, "icon"), $size: $_icon-size, $include-base: $include-common-styles);
    @if $include-common-styles {
      position: absolute;
      left: $_padding;
      top: $_padding;
    }
    color: map.get($_variants, $variant, "icon-color");
  }

  p:last-child {
    margin-bottom: 0;
  }
}
