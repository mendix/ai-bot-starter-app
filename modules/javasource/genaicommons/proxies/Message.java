// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package genaicommons.proxies;

/**
 * A message that is part of the request or the response.
 */
public class Message implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject messageMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "GenAICommons.Message";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Role("Role"),
		Content("Content"),
		MessageType("MessageType"),
		ToolCallId("ToolCallId"),
		Message_ToolCall("GenAICommons.Message_ToolCall"),
		Message_Reference("GenAICommons.Message_Reference"),
		Message_FileCollection("GenAICommons.Message_FileCollection");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Message(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Message(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject messageMendixObject)
	{
		if (messageMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, messageMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.messageMendixObject = messageMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static genaicommons.proxies.Message initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new genaicommons.proxies.Message(context, mendixObject);
	}

	public static genaicommons.proxies.Message load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return genaicommons.proxies.Message.initialize(context, mendixObject);
	}

	/**
	 * Get value of Role
	 * @param role
	 */
	public final genaicommons.proxies.ENUM_MessageRole getRole()
	{
		return getRole(getContext());
	}

	/**
	 * @param context
	 * @return value of Role
	 */
	public final genaicommons.proxies.ENUM_MessageRole getRole(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Role.toString());
		if (obj == null) {
			return null;
		}
		return genaicommons.proxies.ENUM_MessageRole.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Role
	 * @param role
	 */
	public final void setRole(genaicommons.proxies.ENUM_MessageRole role)
	{
		setRole(getContext(), role);
	}

	/**
	 * Set value of Role
	 * @param context
	 * @param role
	 */
	public final void setRole(com.mendix.systemwideinterfaces.core.IContext context, genaicommons.proxies.ENUM_MessageRole role)
	{
		if (role != null) {
			getMendixObject().setValue(context, MemberNames.Role.toString(), role.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.Role.toString(), null);
		}
	}

	/**
	 * @return value of Content
	 */
	public final java.lang.String getContent()
	{
		return getContent(getContext());
	}

	/**
	 * @param context
	 * @return value of Content
	 */
	public final java.lang.String getContent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Content.toString());
	}

	/**
	 * Set value of Content
	 * @param content
	 */
	public final void setContent(java.lang.String content)
	{
		setContent(getContext(), content);
	}

	/**
	 * Set value of Content
	 * @param context
	 * @param content
	 */
	public final void setContent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String content)
	{
		getMendixObject().setValue(context, MemberNames.Content.toString(), content);
	}

	/**
	 * Get value of MessageType
	 * @param messagetype
	 */
	public final genaicommons.proxies.ENUM_MessageType getMessageType()
	{
		return getMessageType(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageType
	 */
	public final genaicommons.proxies.ENUM_MessageType getMessageType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MessageType.toString());
		if (obj == null) {
			return null;
		}
		return genaicommons.proxies.ENUM_MessageType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MessageType
	 * @param messagetype
	 */
	public final void setMessageType(genaicommons.proxies.ENUM_MessageType messagetype)
	{
		setMessageType(getContext(), messagetype);
	}

	/**
	 * Set value of MessageType
	 * @param context
	 * @param messagetype
	 */
	public final void setMessageType(com.mendix.systemwideinterfaces.core.IContext context, genaicommons.proxies.ENUM_MessageType messagetype)
	{
		if (messagetype != null) {
			getMendixObject().setValue(context, MemberNames.MessageType.toString(), messagetype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.MessageType.toString(), null);
		}
	}

	/**
	 * @return value of ToolCallId
	 */
	public final java.lang.String getToolCallId()
	{
		return getToolCallId(getContext());
	}

	/**
	 * @param context
	 * @return value of ToolCallId
	 */
	public final java.lang.String getToolCallId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ToolCallId.toString());
	}

	/**
	 * Set value of ToolCallId
	 * @param toolcallid
	 */
	public final void setToolCallId(java.lang.String toolcallid)
	{
		setToolCallId(getContext(), toolcallid);
	}

	/**
	 * Set value of ToolCallId
	 * @param context
	 * @param toolcallid
	 */
	public final void setToolCallId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String toolcallid)
	{
		getMendixObject().setValue(context, MemberNames.ToolCallId.toString(), toolcallid);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Message_ToolCall
	 */
	public final java.util.List<genaicommons.proxies.ToolCall> getMessage_ToolCall() throws com.mendix.core.CoreException
	{
		return getMessage_ToolCall(getContext());
	}

	/**
	 * @param context
	 * @return value of Message_ToolCall
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<genaicommons.proxies.ToolCall> getMessage_ToolCall(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<genaicommons.proxies.ToolCall> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Message_ToolCall.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(genaicommons.proxies.ToolCall.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Message_ToolCall
	 * @param message_toolcall
	 */
	public final void setMessage_ToolCall(java.util.List<genaicommons.proxies.ToolCall> message_toolcall)
	{
		setMessage_ToolCall(getContext(), message_toolcall);
	}

	/**
	 * Set value of Message_ToolCall
	 * @param context
	 * @param message_toolcall
	 */
	public final void setMessage_ToolCall(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<genaicommons.proxies.ToolCall> message_toolcall)
	{
		var identifiers = message_toolcall
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Message_ToolCall.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Message_Reference
	 */
	public final java.util.List<genaicommons.proxies.Reference> getMessage_Reference() throws com.mendix.core.CoreException
	{
		return getMessage_Reference(getContext());
	}

	/**
	 * @param context
	 * @return value of Message_Reference
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<genaicommons.proxies.Reference> getMessage_Reference(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<genaicommons.proxies.Reference> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Message_Reference.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(genaicommons.proxies.Reference.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Message_Reference
	 * @param message_reference
	 */
	public final void setMessage_Reference(java.util.List<genaicommons.proxies.Reference> message_reference)
	{
		setMessage_Reference(getContext(), message_reference);
	}

	/**
	 * Set value of Message_Reference
	 * @param context
	 * @param message_reference
	 */
	public final void setMessage_Reference(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<genaicommons.proxies.Reference> message_reference)
	{
		var identifiers = message_reference
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Message_Reference.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Message_FileCollection
	 */
	public final genaicommons.proxies.FileCollection getMessage_FileCollection() throws com.mendix.core.CoreException
	{
		return getMessage_FileCollection(getContext());
	}

	/**
	 * @param context
	 * @return value of Message_FileCollection
	 * @throws com.mendix.core.CoreException
	 */
	public final genaicommons.proxies.FileCollection getMessage_FileCollection(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		genaicommons.proxies.FileCollection result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Message_FileCollection.toString());
		if (identifier != null) {
			result = genaicommons.proxies.FileCollection.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Message_FileCollection
	 * @param message_filecollection
	 */
	public final void setMessage_FileCollection(genaicommons.proxies.FileCollection message_filecollection)
	{
		setMessage_FileCollection(getContext(), message_filecollection);
	}

	/**
	 * Set value of Message_FileCollection
	 * @param context
	 * @param message_filecollection
	 */
	public final void setMessage_FileCollection(com.mendix.systemwideinterfaces.core.IContext context, genaicommons.proxies.FileCollection message_filecollection)
	{
		if (message_filecollection == null) {
			getMendixObject().setValue(context, MemberNames.Message_FileCollection.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Message_FileCollection.toString(), message_filecollection.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return messageMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final genaicommons.proxies.Message that = (genaicommons.proxies.Message) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
