// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package genaicommons.proxies;

/**
 * A file in the file collection.
 */
public class FileContent implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject fileContentMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "GenAICommons.FileContent";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FileContent("FileContent"),
		ContentType("ContentType"),
		FileType("FileType"),
		TextContent("TextContent"),
		FileExtension("FileExtension");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public FileContent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected FileContent(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject fileContentMendixObject)
	{
		if (fileContentMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, fileContentMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.fileContentMendixObject = fileContentMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static genaicommons.proxies.FileContent initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("OpenAIConnector.OpenAIFileContent", mendixObject.getType())) {
			return openaiconnector.proxies.OpenAIFileContent.initialize(context, mendixObject);
		}
		return new genaicommons.proxies.FileContent(context, mendixObject);
	}

	public static genaicommons.proxies.FileContent load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return genaicommons.proxies.FileContent.initialize(context, mendixObject);
	}

	/**
	 * @return value of FileContent
	 */
	public final java.lang.String getFileContent()
	{
		return getFileContent(getContext());
	}

	/**
	 * @param context
	 * @return value of FileContent
	 */
	public final java.lang.String getFileContent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FileContent.toString());
	}

	/**
	 * Set value of FileContent
	 * @param filecontent
	 */
	public final void setFileContent(java.lang.String filecontent)
	{
		setFileContent(getContext(), filecontent);
	}

	/**
	 * Set value of FileContent
	 * @param context
	 * @param filecontent
	 */
	public final void setFileContent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String filecontent)
	{
		getMendixObject().setValue(context, MemberNames.FileContent.toString(), filecontent);
	}

	/**
	 * Get value of ContentType
	 * @param contenttype
	 */
	public final genaicommons.proxies.ENUM_ContentType getContentType()
	{
		return getContentType(getContext());
	}

	/**
	 * @param context
	 * @return value of ContentType
	 */
	public final genaicommons.proxies.ENUM_ContentType getContentType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ContentType.toString());
		if (obj == null) {
			return null;
		}
		return genaicommons.proxies.ENUM_ContentType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ContentType
	 * @param contenttype
	 */
	public final void setContentType(genaicommons.proxies.ENUM_ContentType contenttype)
	{
		setContentType(getContext(), contenttype);
	}

	/**
	 * Set value of ContentType
	 * @param context
	 * @param contenttype
	 */
	public final void setContentType(com.mendix.systemwideinterfaces.core.IContext context, genaicommons.proxies.ENUM_ContentType contenttype)
	{
		if (contenttype != null) {
			getMendixObject().setValue(context, MemberNames.ContentType.toString(), contenttype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.ContentType.toString(), null);
		}
	}

	/**
	 * Get value of FileType
	 * @param filetype
	 */
	public final genaicommons.proxies.ENUM_FileType getFileType()
	{
		return getFileType(getContext());
	}

	/**
	 * @param context
	 * @return value of FileType
	 */
	public final genaicommons.proxies.ENUM_FileType getFileType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FileType.toString());
		if (obj == null) {
			return null;
		}
		return genaicommons.proxies.ENUM_FileType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FileType
	 * @param filetype
	 */
	public final void setFileType(genaicommons.proxies.ENUM_FileType filetype)
	{
		setFileType(getContext(), filetype);
	}

	/**
	 * Set value of FileType
	 * @param context
	 * @param filetype
	 */
	public final void setFileType(com.mendix.systemwideinterfaces.core.IContext context, genaicommons.proxies.ENUM_FileType filetype)
	{
		if (filetype != null) {
			getMendixObject().setValue(context, MemberNames.FileType.toString(), filetype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.FileType.toString(), null);
		}
	}

	/**
	 * @return value of TextContent
	 */
	public final java.lang.String getTextContent()
	{
		return getTextContent(getContext());
	}

	/**
	 * @param context
	 * @return value of TextContent
	 */
	public final java.lang.String getTextContent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TextContent.toString());
	}

	/**
	 * Set value of TextContent
	 * @param textcontent
	 */
	public final void setTextContent(java.lang.String textcontent)
	{
		setTextContent(getContext(), textcontent);
	}

	/**
	 * Set value of TextContent
	 * @param context
	 * @param textcontent
	 */
	public final void setTextContent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String textcontent)
	{
		getMendixObject().setValue(context, MemberNames.TextContent.toString(), textcontent);
	}

	/**
	 * @return value of FileExtension
	 */
	public final java.lang.String getFileExtension()
	{
		return getFileExtension(getContext());
	}

	/**
	 * @param context
	 * @return value of FileExtension
	 */
	public final java.lang.String getFileExtension(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FileExtension.toString());
	}

	/**
	 * Set value of FileExtension
	 * @param fileextension
	 */
	public final void setFileExtension(java.lang.String fileextension)
	{
		setFileExtension(getContext(), fileextension);
	}

	/**
	 * Set value of FileExtension
	 * @param context
	 * @param fileextension
	 */
	public final void setFileExtension(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fileextension)
	{
		getMendixObject().setValue(context, MemberNames.FileExtension.toString(), fileextension);
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return fileContentMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final genaicommons.proxies.FileContent that = (genaicommons.proxies.FileContent) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
