// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package genaicommons.proxies;

/**
 * Accepetd input modality of the associated deployed model.
 */
public class InputModality implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject inputModalityMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "GenAICommons.InputModality";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ModelModality("ModelModality");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public InputModality(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected InputModality(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject inputModalityMendixObject)
	{
		if (inputModalityMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, inputModalityMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.inputModalityMendixObject = inputModalityMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static genaicommons.proxies.InputModality initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new genaicommons.proxies.InputModality(context, mendixObject);
	}

	public static genaicommons.proxies.InputModality load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return genaicommons.proxies.InputModality.initialize(context, mendixObject);
	}

	public static java.util.List<genaicommons.proxies.InputModality> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> genaicommons.proxies.InputModality.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Get value of ModelModality
	 * @param modelmodality
	 */
	public final genaicommons.proxies.ENUM_ModelModality getModelModality()
	{
		return getModelModality(getContext());
	}

	/**
	 * @param context
	 * @return value of ModelModality
	 */
	public final genaicommons.proxies.ENUM_ModelModality getModelModality(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ModelModality.toString());
		if (obj == null) {
			return null;
		}
		return genaicommons.proxies.ENUM_ModelModality.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ModelModality
	 * @param modelmodality
	 */
	public final void setModelModality(genaicommons.proxies.ENUM_ModelModality modelmodality)
	{
		setModelModality(getContext(), modelmodality);
	}

	/**
	 * Set value of ModelModality
	 * @param context
	 * @param modelmodality
	 */
	public final void setModelModality(com.mendix.systemwideinterfaces.core.IContext context, genaicommons.proxies.ENUM_ModelModality modelmodality)
	{
		if (modelmodality != null) {
			getMendixObject().setValue(context, MemberNames.ModelModality.toString(), modelmodality.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.ModelModality.toString(), null);
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return inputModalityMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final genaicommons.proxies.InputModality that = (genaicommons.proxies.InputModality) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
