// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mxgenaiconnector.proxies;

/**
 * This represents a partition of the knowledge base resource that is available in the Mendix Cloud. It represents a discrete data collection, to be used for a specific use case from the Mendix app(s).
 * Multiple collections can exist in parallel to prevent mixing data of different use cases.
 * This entity contains a name which is used in every interaction with a knowledge base resource, to specify the collection within the knowledge base resource that is relevant for the data interactions.
 */
public class Collection implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject collectionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MxGenAIConnector.Collection";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Collection_MxCloudKnowledgeBase("MxGenAIConnector.Collection_MxCloudKnowledgeBase");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Collection(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Collection(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject collectionMendixObject)
	{
		if (collectionMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, collectionMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.collectionMendixObject = collectionMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static mxgenaiconnector.proxies.Collection initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mxgenaiconnector.proxies.Collection(context, mendixObject);
	}

	public static mxgenaiconnector.proxies.Collection load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mxgenaiconnector.proxies.Collection.initialize(context, mendixObject);
	}

	public static java.util.List<mxgenaiconnector.proxies.Collection> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> mxgenaiconnector.proxies.Collection.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Collection_MxCloudKnowledgeBase
	 */
	public final mxgenaiconnector.proxies.MxCloudKnowledgeBase getCollection_MxCloudKnowledgeBase() throws com.mendix.core.CoreException
	{
		return getCollection_MxCloudKnowledgeBase(getContext());
	}

	/**
	 * @param context
	 * @return value of Collection_MxCloudKnowledgeBase
	 * @throws com.mendix.core.CoreException
	 */
	public final mxgenaiconnector.proxies.MxCloudKnowledgeBase getCollection_MxCloudKnowledgeBase(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxgenaiconnector.proxies.MxCloudKnowledgeBase result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Collection_MxCloudKnowledgeBase.toString());
		if (identifier != null) {
			result = mxgenaiconnector.proxies.MxCloudKnowledgeBase.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Collection_MxCloudKnowledgeBase
	 * @param collection_mxcloudknowledgebase
	 */
	public final void setCollection_MxCloudKnowledgeBase(mxgenaiconnector.proxies.MxCloudKnowledgeBase collection_mxcloudknowledgebase)
	{
		setCollection_MxCloudKnowledgeBase(getContext(), collection_mxcloudknowledgebase);
	}

	/**
	 * Set value of Collection_MxCloudKnowledgeBase
	 * @param context
	 * @param collection_mxcloudknowledgebase
	 */
	public final void setCollection_MxCloudKnowledgeBase(com.mendix.systemwideinterfaces.core.IContext context, mxgenaiconnector.proxies.MxCloudKnowledgeBase collection_mxcloudknowledgebase)
	{
		if (collection_mxcloudknowledgebase == null) {
			getMendixObject().setValue(context, MemberNames.Collection_MxCloudKnowledgeBase.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Collection_MxCloudKnowledgeBase.toString(), collection_mxcloudknowledgebase.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return collectionMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mxgenaiconnector.proxies.Collection that = (mxgenaiconnector.proxies.Collection) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
