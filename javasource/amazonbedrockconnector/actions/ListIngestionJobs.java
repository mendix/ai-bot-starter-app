// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazonbedrockconnector.actions;

import static java.util.Objects.requireNonNull;
import java.util.Date;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import amazonbedrockconnector.impl.MxLogger;
import amazonbedrockconnector.proxies.IngestionJobStats;
import amazonbedrockconnector.proxies.IngestionJobSummary;
import amazonbedrockconnector.proxies.ListIngestionJobsResponse;
import amazonbedrockconnector.impl.MxIngestionJob;
import software.amazon.awssdk.services.bedrockagent.BedrockAgentClient;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import amazonbedrockconnector.impl.AmazonBedrockClient;
import com.mendix.systemwideinterfaces.core.UserAction;

public class ListIngestionJobs extends UserAction<IMendixObject>
{
	/** @deprecated use Credentials.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __Credentials;
	private final awsauthentication.proxies.Credentials Credentials;
	private final awsauthentication.proxies.ENUM_Region Region;
	/** @deprecated use ListIngestionJobsRequest.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __ListIngestionJobsRequest;
	private final amazonbedrockconnector.proxies.ListIngestionJobsRequest ListIngestionJobsRequest;

	public ListIngestionJobs(
		IContext context,
		IMendixObject _credentials,
		java.lang.String _region,
		IMendixObject _listIngestionJobsRequest
	)
	{
		super(context);
		this.__Credentials = _credentials;
		this.Credentials = _credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), _credentials);
		this.Region = _region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(_region);
		this.__ListIngestionJobsRequest = _listIngestionJobsRequest;
		this.ListIngestionJobsRequest = _listIngestionJobsRequest == null ? null : amazonbedrockconnector.proxies.ListIngestionJobsRequest.initialize(getContext(), _listIngestionJobsRequest);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			requireNonNull(Credentials, "AWS Credentials are required");
			requireNonNull(ListIngestionJobsRequest, "ListAgentsRequest is required");
			requireNonNull(Region, "AWS Region is required");
			
			BedrockAgentClient client = AmazonBedrockClient.getBedrockAgentClient(Credentials, Region, ListIngestionJobsRequest);
			
			validateRequest();
			
			software.amazon.awssdk.services.bedrockagent.model.ListIngestionJobsRequest awsRequest = createAwsRequest();
			LOGGER.info("AWS request: " + awsRequest);
			
			software.amazon.awssdk.services.bedrockagent.model.ListIngestionJobsResponse awsResponse = client.listIngestionJobs(awsRequest);
			LOGGER.info("AWS response: " + awsResponse);
			
			return getMxResponse(awsResponse).getMendixObject();
			
		} catch (Exception e) {
			
			LOGGER.error(e.getMessage());
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ListIngestionJobs";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(ListIngestionJobs.class);
	
	private void validateRequest() throws CoreException {
		
		if (this.ListIngestionJobsRequest.getKnowledgeBaseId() == null || this.ListIngestionJobsRequest.getKnowledgeBaseId().isBlank()) {
			throw new IllegalArgumentException("KnowledgeBaseId is required.");
		}
		if (this.ListIngestionJobsRequest.getDataSourceId() == null || this.ListIngestionJobsRequest.getDataSourceId().isBlank()) {
			throw new IllegalArgumentException("DataSourceId is required.");
		}
	}
	
	software.amazon.awssdk.services.bedrockagent.model.ListIngestionJobsRequest createAwsRequest(){
		
		software.amazon.awssdk.services.bedrockagent.model.ListIngestionJobsRequest.Builder awsRequestBuilder = software.amazon.awssdk.services.bedrockagent.model.ListIngestionJobsRequest.builder()
								.knowledgeBaseId(this.ListIngestionJobsRequest.getKnowledgeBaseId())
								.dataSourceId(this.ListIngestionJobsRequest.getDataSourceId());
		
		if (this.ListIngestionJobsRequest.getMaxResults() != null) {
			awsRequestBuilder.maxResults(this.ListIngestionJobsRequest.getMaxResults());
		}
		
		if (this.ListIngestionJobsRequest.getNextToken() != null && !this.ListIngestionJobsRequest.getNextToken().isBlank()) {
			awsRequestBuilder.nextToken(this.ListIngestionJobsRequest.getNextToken());
		}
		
		return awsRequestBuilder.build();
	}
	
	ListIngestionJobsResponse getMxResponse(software.amazon.awssdk.services.bedrockagent.model.ListIngestionJobsResponse awsResponse) {
		
		ListIngestionJobsResponse mxResponse = new ListIngestionJobsResponse(getContext());
		
		mxResponse.setNextToken(awsResponse.nextToken());
		awsResponse.ingestionJobSummaries().forEach(awsSummary -> createMxSummary(awsSummary,mxResponse));
		
		return mxResponse;
	}
	
	void createMxSummary(software.amazon.awssdk.services.bedrockagent.model.IngestionJobSummary awsSummary, ListIngestionJobsResponse mxResponse) {
		
		IngestionJobSummary mxSummary = new IngestionJobSummary(getContext());
		mxSummary.setDescription(awsSummary.description());
		mxSummary.setKnowledgeBaseId(awsSummary.knowledgeBaseId());
		mxSummary.setDataSourceId(awsSummary.dataSourceId());
		mxSummary.setIngestionJobId(awsSummary.ingestionJobId());
		mxSummary.setStatus(MxIngestionJob.getENUMStatus(awsSummary.status()));
		mxSummary.setStartedAt(Date.from(awsSummary.startedAt()));
		mxSummary.setUpdatedAt(Date.from(awsSummary.updatedAt()));
		mxSummary.setIngestionJobSummary_ListIngestionJobsResponse(mxResponse);
		
		// Statistics object
		software.amazon.awssdk.services.bedrockagent.model.IngestionJobStatistics statistics = awsSummary.statistics();
		IngestionJobStats mxIngestionJobStatistics = new IngestionJobStats(getContext());
		mxIngestionJobStatistics.setnumberOfDocumentsDeleted(statistics.numberOfDocumentsDeleted());
		mxIngestionJobStatistics.setnumberOfDocumentsFailed(statistics.numberOfDocumentsFailed());
		mxIngestionJobStatistics.setnumberOfDocumentsScanned(statistics.numberOfDocumentsScanned());
		mxIngestionJobStatistics.setnumberOfModifiedDocumentsIndexed(statistics.numberOfModifiedDocumentsIndexed());
		mxIngestionJobStatistics.setnumberOfNewDocumentsIndexed(statistics.numberOfNewDocumentsIndexed());
		mxIngestionJobStatistics.setIngestionJobStats_IngestionJob(mxSummary);
		
	}
	
	// END EXTRA CODE
}
