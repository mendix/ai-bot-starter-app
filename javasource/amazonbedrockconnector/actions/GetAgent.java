// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazonbedrockconnector.actions;

import static java.util.Objects.requireNonNull;
import java.util.Date;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import amazonbedrockconnector.impl.AmazonBedrockClient;
import amazonbedrockconnector.impl.MxLogger;
import amazonbedrockconnector.proxies.GetAgentResponse;
import amazonbedrockconnector.proxies.RecommendedAction;
import amazonbedrockconnector.proxies.Agent;
import amazonbedrockconnector.proxies.AgentFailureReason;
import amazonbedrockconnector.proxies.ENUM_AgentStatus;
import software.amazon.awssdk.services.bedrockagent.BedrockAgentClient;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class GetAgent extends CustomJavaAction<IMendixObject>
{
	/** @deprecated use Credentials.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __Credentials;
	private final awsauthentication.proxies.Credentials Credentials;
	private final awsauthentication.proxies.ENUM_Region Region;
	/** @deprecated use GetAgentRequest.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __GetAgentRequest;
	private final amazonbedrockconnector.proxies.GetAgentRequest GetAgentRequest;

	public GetAgent(
		IContext context,
		IMendixObject _credentials,
		java.lang.String _region,
		IMendixObject _getAgentRequest
	)
	{
		super(context);
		this.__Credentials = _credentials;
		this.Credentials = _credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), _credentials);
		this.Region = _region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(_region);
		this.__GetAgentRequest = _getAgentRequest;
		this.GetAgentRequest = _getAgentRequest == null ? null : amazonbedrockconnector.proxies.GetAgentRequest.initialize(getContext(), _getAgentRequest);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			requireNonNull(Credentials, "AWS Credentials are required");
			requireNonNull(GetAgentRequest, "GetAgentRequest is required");
			requireNonNull(Region, "AWS Region is required");
			
			validateRequest();
			
			BedrockAgentClient client = AmazonBedrockClient.getBedrockAgentClient(Credentials, Region, GetAgentRequest);
			
			software.amazon.awssdk.services.bedrockagent.model.GetAgentRequest awsRequest = createAwsRequest();
			LOGGER.info("AWS request: " + awsRequest);			
			
			software.amazon.awssdk.services.bedrockagent.model.GetAgentResponse awsResponse = client.getAgent(awsRequest);
			LOGGER.info("AWS response: " + awsResponse);
			
			return getMxResponse(awsResponse).getMendixObject();
			
		} catch (Exception e) {
			
			LOGGER.error(e.getMessage());
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetAgent";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(GetAgent.class);
	
	private void validateRequest() {
		
		if (this.GetAgentRequest.getAgentID() == null || this.GetAgentRequest.getAgentID().isBlank()) {
			throw new IllegalArgumentException("AgentID is required.");
		}
	}
	
	private software.amazon.awssdk.services.bedrockagent.model.GetAgentRequest createAwsRequest() {
		
		software.amazon.awssdk.services.bedrockagent.model.GetAgentRequest awsRequest = software.amazon.awssdk.services.bedrockagent.model.GetAgentRequest.builder()
				.agentId(this.GetAgentRequest.getAgentID())
				.build();
		
		return awsRequest;
	}
	
	private GetAgentResponse getMxResponse(software.amazon.awssdk.services.bedrockagent.model.GetAgentResponse awsResponse) {
		
		GetAgentResponse mxResponse = new GetAgentResponse(getContext());
		Agent mxAgent = new Agent(getContext());
		
		mxAgent.setAgentARN(awsResponse.agent().agentArn());
		mxAgent.setAgentID(awsResponse.agent().agentId());
		mxAgent.setAgentName(awsResponse.agent().agentName());
		mxAgent.setAgentResourceRoleARN(awsResponse.agent().agentResourceRoleArn());
		mxAgent.setAgentStatus(ENUM_AgentStatus.valueOf(awsResponse.agent().agentStatusAsString()));
		mxAgent.setAgentVersion(awsResponse.agent().agentVersion());
		mxAgent.setCreatedAt(Date.from(awsResponse.agent().createdAt()));
		mxAgent.setIdleSessionTTLInSeconds(awsResponse.agent().idleSessionTTLInSeconds());
		mxAgent.setUpdatedAt(Date.from(awsResponse.agent().updatedAt()));
		mxAgent.setClientToken(awsResponse.agent().clientToken());
		mxAgent.setCustomerEncryptionKeyArn(awsResponse.agent().customerEncryptionKeyArn());
		mxAgent.setDescription(awsResponse.agent().description());
		mxAgent.setFoundationModel(awsResponse.agent().foundationModel());
		mxAgent.setInstruction(awsResponse.agent().instruction());
		mxAgent.setPreparedAt(Date.from(awsResponse.agent().preparedAt()));		
		awsResponse.agent().failureReasons().forEach(awsFailureReason -> createMxAgentFailureReason(awsFailureReason,mxAgent));
		awsResponse.agent().recommendedActions().forEach(awsRecommendedAction -> createMxRecommendedAction(awsRecommendedAction,mxAgent));
		mxAgent.setAgent_GetAgentResponse(mxResponse);
		
		return mxResponse;
	}
	
	void createMxAgentFailureReason(java.lang.String awsFailureReason, Agent mxAgent) {
		
		AgentFailureReason mxAgentFailureReason = new AgentFailureReason(getContext());
		mxAgentFailureReason.setText(awsFailureReason);
		mxAgentFailureReason.setAgentFailureReason_Agent(mxAgent);
		
	}
	
	void createMxRecommendedAction(java.lang.String awsRecommendedAction, Agent mxAgent) {
		
		RecommendedAction mxRecommendedAction = new RecommendedAction(getContext());
		mxRecommendedAction.setText(awsRecommendedAction);
		mxRecommendedAction.setRecommendedAction_Agent(mxAgent);
		
	}
	// END EXTRA CODE
}
