// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazonbedrockconnector.actions;

import static java.util.Objects.requireNonNull;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import amazonbedrockconnector.impl.AmazonBedrockClient;
import amazonbedrockconnector.impl.MxCitation;
import amazonbedrockconnector.impl.MxLogger;
import amazonbedrockconnector.proxies.RetrieveAndGenerateCitation;
import amazonbedrockconnector.proxies.SessionConfiguration;
import software.amazon.awssdk.services.bedrockagentruntime.model.Citation;
import software.amazon.awssdk.services.bedrockagentruntime.model.KnowledgeBaseRetrieveAndGenerateConfiguration;
import software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateConfiguration;
import software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateInput;
import software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateResponse;
import software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateSessionConfiguration;
import software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateType;

public class RetrieveAndGenerate extends CustomJavaAction<IMendixObject>
{
	/** @deprecated use Credentials.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __Credentials;
	private final awsauthentication.proxies.Credentials Credentials;
	private final awsauthentication.proxies.ENUM_Region Region;
	/** @deprecated use RetrieveAndGenerateRequest.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __RetrieveAndGenerateRequest;
	private final amazonbedrockconnector.proxies.RetrieveAndGenerateRequest RetrieveAndGenerateRequest;

	public RetrieveAndGenerate(
		IContext context,
		IMendixObject _credentials,
		java.lang.String _region,
		IMendixObject _retrieveAndGenerateRequest
	)
	{
		super(context);
		this.__Credentials = _credentials;
		this.Credentials = _credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), _credentials);
		this.Region = _region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(_region);
		this.__RetrieveAndGenerateRequest = _retrieveAndGenerateRequest;
		this.RetrieveAndGenerateRequest = _retrieveAndGenerateRequest == null ? null : amazonbedrockconnector.proxies.RetrieveAndGenerateRequest.initialize(getContext(), _retrieveAndGenerateRequest);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			requireNonNull(Credentials, "AWS Credentials are required");
			requireNonNull(RetrieveAndGenerateRequest, "RetrieveAndGenerateRequest is required");
			requireNonNull(Region, "AWS Region is required");
			
			validateRequest();
			
			var client = AmazonBedrockClient.getBedrockAgentRuntimeClient(Credentials, Region, RetrieveAndGenerateRequest);
			
			software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateRequest awsRequest = getAwsRequest();
			LOGGER.info("AWS request: " + awsRequest);
			
			RetrieveAndGenerateResponse awsResponse = client.retrieveAndGenerate(awsRequest);
			LOGGER.info("AWS response: " + awsResponse);
			
			amazonbedrockconnector.proxies.RetrieveAndGenerateResponse mxResponse = getMxResponse(awsResponse);
			
			return mxResponse.getMendixObject();
			
		} catch (Exception e) {
			LOGGER.error(e.getMessage());
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "RetrieveAndGenerate";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(RetrieveAndGenerate.class);
	
	private void validateRequest() throws Exception {
		if (RetrieveAndGenerateRequest.getInputText() == null || RetrieveAndGenerateRequest.getInputText().isBlank()) {
			throw new IllegalArgumentException("The InputText attribute of the RetrieveAndGenerateRequest object is required.");
		}
		
		amazonbedrockconnector.proxies.RetrieveAndGenerateConfiguration mxRetrieveAndGenerateConfig = RetrieveAndGenerateRequest.getRetrieveAndGenerateRequest_RetrieveAndGenerateConfiguration(getContext());
		if (mxRetrieveAndGenerateConfig == null) {
			throw new IllegalArgumentException("A KnowledgeBaseConfiguration object is required as part of the RetrieveAndGenerateRequest.");
		}
		
		if (mxRetrieveAndGenerateConfig.getKnowledgeBaseId() == null || mxRetrieveAndGenerateConfig.getKnowledgeBaseId().isBlank()) {
			throw new IllegalArgumentException("The KnowledgeBaseId attribute of the KnowledgeBaseConfiguration object is required.");
		}
		
		if (mxRetrieveAndGenerateConfig.getModelARN() == null || mxRetrieveAndGenerateConfig.getModelARN().isBlank()) {
			throw new IllegalArgumentException("The ModelARN attribute of the KnowledgeBaseConfiguration object is required.");
		}
		
		if (mxRetrieveAndGenerateConfig.getRetrieveAndGenerateType() == null) {
			throw new IllegalArgumentException("The RetrieveAndGenerate attribute of the KnowledgeBaseConfiguration object is required.");
		}
		
	}
	
	private software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateRequest getAwsRequest() throws Exception {
		var awsRequestBuilder = software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveAndGenerateRequest.builder();
		
		awsRequestBuilder
			.input(getInput())
			.retrieveAndGenerateConfiguration(getRetrieveAndGenerateConfiguration());
		
		String sessionId = RetrieveAndGenerateRequest.getSessionId();
		if (sessionId != null && !sessionId.isBlank()) {
			awsRequestBuilder.sessionId(sessionId);
		}
		
		if (RetrieveAndGenerateRequest.getRetrieveAndGenerateRequest_SessionConfiguration() != null && RetrieveAndGenerateRequest.getRetrieveAndGenerateRequest_SessionConfiguration().getKmsKeyArn() != null && !RetrieveAndGenerateRequest.getRetrieveAndGenerateRequest_SessionConfiguration().getKmsKeyArn().isBlank()) {
			awsRequestBuilder.sessionConfiguration(getSessionConfiguration());
		}
		
		return awsRequestBuilder.build();
	}
	
	private RetrieveAndGenerateInput getInput() {
		var builder = RetrieveAndGenerateInput.builder();
		builder.text(RetrieveAndGenerateRequest.getInputText());
		
		return builder.build();
	}
	
	private RetrieveAndGenerateSessionConfiguration getSessionConfiguration() throws Exception {
		var builder = RetrieveAndGenerateSessionConfiguration.builder();
		SessionConfiguration mxSessionConfig = RetrieveAndGenerateRequest.getRetrieveAndGenerateRequest_SessionConfiguration(getContext());
		builder.kmsKeyArn(mxSessionConfig.getKmsKeyArn());
		
		return builder.build();
	}
	
	private RetrieveAndGenerateConfiguration getRetrieveAndGenerateConfiguration() throws Exception {
		var builder = RetrieveAndGenerateConfiguration.builder();
		amazonbedrockconnector.proxies.RetrieveAndGenerateConfiguration mxRetrieveAndGenerateConfig = RetrieveAndGenerateRequest.getRetrieveAndGenerateRequest_RetrieveAndGenerateConfiguration(getContext());
		
		builder.type(RetrieveAndGenerateType.valueOf(mxRetrieveAndGenerateConfig.getRetrieveAndGenerateType().toString()))
			.knowledgeBaseConfiguration(getKnowledgeBaseRetrieveAndGenerateConfiguration(mxRetrieveAndGenerateConfig));
		
		return builder.build();				
	}
	
	private KnowledgeBaseRetrieveAndGenerateConfiguration getKnowledgeBaseRetrieveAndGenerateConfiguration(amazonbedrockconnector.proxies.RetrieveAndGenerateConfiguration mxRetrieveAndGenerateConfig) throws Exception {
		var builder = KnowledgeBaseRetrieveAndGenerateConfiguration.builder();
		
		builder.knowledgeBaseId(mxRetrieveAndGenerateConfig.getKnowledgeBaseId())
			.modelArn(mxRetrieveAndGenerateConfig.getModelARN());
		
		return builder.build();
	}
	
	private amazonbedrockconnector.proxies.RetrieveAndGenerateResponse getMxResponse(RetrieveAndGenerateResponse awsResponse) {
		amazonbedrockconnector.proxies.RetrieveAndGenerateResponse mxResponse = new amazonbedrockconnector.proxies.RetrieveAndGenerateResponse(getContext());
		
		mxResponse.setSessionId(awsResponse.sessionId());
		mxResponse.setOutputText(awsResponse.output().text());
		
		awsResponse.citations().forEach(awsCitation -> {
			RetrieveAndGenerateCitation mxCitation = createMxCitation(awsCitation);
			mxCitation.setRetrieveAndGenerateCitation_RetrieveAndGenerateResponse(mxResponse);
		});
		
		return mxResponse;
	}
	
	private RetrieveAndGenerateCitation createMxCitation(Citation awsCitation) {
		amazonbedrockconnector.proxies.RetrieveAndGenerateCitation mxCitation = new amazonbedrockconnector.proxies.RetrieveAndGenerateCitation(getContext());
		MxCitation.setMxCitations(awsCitation, mxCitation, getContext());
		return mxCitation;
	}
	
	
	
	// END EXTRA CODE
}
