// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazonbedrockconnector.actions;

import static java.util.Objects.requireNonNull;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import amazonbedrockconnector.impl.AmazonBedrockClient;
import amazonbedrockconnector.impl.MxLogger;
import amazonbedrockconnector.proxies.GetDataSourceResponse;
import amazonbedrockconnector.impl.MxDataSource;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserAction;

public class GetDataSource extends UserAction<IMendixObject>
{
	/** @deprecated use Credentials.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __Credentials;
	private final awsauthentication.proxies.Credentials Credentials;
	private final awsauthentication.proxies.ENUM_Region Region;
	/** @deprecated use GetDataSourceRequest.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __GetDataSourceRequest;
	private final amazonbedrockconnector.proxies.GetDataSourceRequest GetDataSourceRequest;

	public GetDataSource(
		IContext context,
		IMendixObject _credentials,
		java.lang.String _region,
		IMendixObject _getDataSourceRequest
	)
	{
		super(context);
		this.__Credentials = _credentials;
		this.Credentials = _credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), _credentials);
		this.Region = _region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(_region);
		this.__GetDataSourceRequest = _getDataSourceRequest;
		this.GetDataSourceRequest = _getDataSourceRequest == null ? null : amazonbedrockconnector.proxies.GetDataSourceRequest.initialize(getContext(), _getDataSourceRequest);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			// Validating JA input parameters
			requireNonNull(Credentials, "AWS Credentials are required");
			requireNonNull(GetDataSourceRequest, "GetDataSourceRequest is required");
			requireNonNull(Region, "Region is required");
			
			validateRequest();
						
			software.amazon.awssdk.services.bedrockagent.BedrockAgentClient client = AmazonBedrockClient.getBedrockAgentClient(Credentials, Region, GetDataSourceRequest);
			
			software.amazon.awssdk.services.bedrockagent.model.GetDataSourceRequest awsRequest = createAwsRequest();
			LOGGER.info("AWS request: " + awsRequest);
			
			software.amazon.awssdk.services.bedrockagent.model.GetDataSourceResponse awsResponse = client.getDataSource(awsRequest);
			LOGGER.info("AWS response: " + awsResponse);
			
			return getMxResponse(awsResponse).getMendixObject();
		
		} catch (Exception e) {
			LOGGER.error(e.getMessage());
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetDataSource";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(GetDataSource.class);
	
	private void validateRequest() throws CoreException {
		
		if (this.GetDataSourceRequest.getKnowledgeBaseId() == null || this.GetDataSourceRequest.getKnowledgeBaseId().isBlank()) {
			throw new IllegalArgumentException("KnowledgeBaseId is required.");
		}
		if (this.GetDataSourceRequest.getDataSourceId() == null || this.GetDataSourceRequest.getDataSourceId().isBlank()) {
			throw new IllegalArgumentException("DataSourceId is required.");
		}	
	}
	
	private software.amazon.awssdk.services.bedrockagent.model.GetDataSourceRequest createAwsRequest() throws CoreException{
			
			software.amazon.awssdk.services.bedrockagent.model.GetDataSourceRequest.Builder awsRequestBuilder = software.amazon.awssdk.services.bedrockagent.model.GetDataSourceRequest.builder();
			awsRequestBuilder.knowledgeBaseId(this.GetDataSourceRequest.getKnowledgeBaseId());
			awsRequestBuilder.dataSourceId(this.GetDataSourceRequest.getDataSourceId());
			return awsRequestBuilder.build();
			
	}
	
	private GetDataSourceResponse getMxResponse(software.amazon.awssdk.services.bedrockagent.model.GetDataSourceResponse awsResponse) {
		
		GetDataSourceResponse mxResponse = new GetDataSourceResponse(getContext());
		MxDataSource.getMxDataSource(mxResponse,awsResponse.dataSource(),getContext());
		
		return mxResponse;
	
	}
	// END EXTRA CODE
}
