// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazonbedrockconnector.actions;

import static java.util.Objects.requireNonNull;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import amazonbedrockconnector.impl.AmazonBedrockClient;
import amazonbedrockconnector.impl.MxLogger;
import amazonbedrockconnector.proxies.RetrievalResult;
import amazonbedrockconnector.proxies.RetrieveResponse;
import genaicommons.proxies.ENUM_SourceType;
import genaicommons.proxies.Message;
import genaicommons.proxies.Reference;
import genaicommons.proxies.Request;
import software.amazon.awssdk.services.bedrockagentruntime.BedrockAgentRuntimeClient;

public class Retrieve extends CustomJavaAction<IMendixObject>
{
	private awsauthentication.proxies.ENUM_Region Region;
	private IMendixObject __Credentials;
	private awsauthentication.proxies.Credentials Credentials;
	private IMendixObject __RetrieveRequest;
	private amazonbedrockconnector.proxies.RetrieveRequest_Extension RetrieveRequest;

	public Retrieve(IContext context, java.lang.String Region, IMendixObject Credentials, IMendixObject RetrieveRequest)
	{
		super(context);
		this.Region = Region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(Region);
		this.__Credentials = Credentials;
		this.__RetrieveRequest = RetrieveRequest;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.Credentials = this.__Credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), __Credentials);

		this.RetrieveRequest = this.__RetrieveRequest == null ? null : amazonbedrockconnector.proxies.RetrieveRequest_Extension.initialize(getContext(), __RetrieveRequest);

		// BEGIN USER CODE
		try {
			// Validating JA input parameters
			requireNonNull(this.Credentials, "AWS Credentials are required");
			requireNonNull(this.RetrieveRequest, "RetrieveRequest is required");
			requireNonNull(this.Region, "AWS Region is required");
			
			// Validating request body
			validateRequest();
			
			// Mapping and logging of the request body to AWS request object
			var awsRequest = createAwsRequest();
			LOGGER.debug("The following request was sent to AWS: ", awsRequest);
			
			// Client creation, executing request, logging response
			BedrockAgentRuntimeClient bedrockClient = AmazonBedrockClient.getBedrockAgentRuntimeClient(Credentials, Region, RetrieveRequest);
			var awsResponse = bedrockClient.retrieve(awsRequest);
			LOGGER.debug("The following response was received from AWS: ", awsResponse);
			
			// Return the AWS request that's mapped to the MX model
			return createMxResponse(awsResponse).getMendixObject();
		} catch (Exception e) {
			LOGGER.error("Exception occurred: ", e.getMessage());
			throw e;
		} 
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Retrieve";
	}

	// BEGIN EXTRA CODE
private static final MxLogger LOGGER = new MxLogger(Retrieve.class);

private String getInputText(Request commonRequest) throws CoreException {
	List<Message> messages = commonRequest.getRequest_Message();
	
	if (messages.size() == 0) {
		throw new IllegalArgumentException("The request does not contain a Message object. It must contain exactly one Message object with the Content attribute set.");
	}
	
	if (messages.size() > 1) {
		throw new IllegalArgumentException("The request contains more than one Message object. This is not supported for this operation. Exactly one Message object is expected");
	}
	return commonRequest.getRequest_Message().get(0).getContent();
}
	
	private void validateRequest() throws CoreException { 
		Request commonRequest = RetrieveRequest.getRetrieveRequest_Extension_Request();
		if (commonRequest == null) {
			throw new IllegalArgumentException("No GenAICommons.Request entity found. A GenAICommons.Request entity is required.");
		}
		String inputText = getInputText(commonRequest);
		if (inputText == null || inputText.isBlank()) {
			throw new IllegalArgumentException("The content attribute of the Message entity is required.");
		}	
	}
	
	private software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveRequest createAwsRequest() throws CoreException {
		var awsRequestBuilder = software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveRequest.builder()
				.knowledgeBaseId(this.RetrieveRequest.getKnowledgeBaseId())
				.nextToken(this.RetrieveRequest.getNextToken())
				.retrievalQuery(createRetrievalQuery());
		
		if (RetrieveRequest.getRetrieveRequest_Extension_RetrievalConfiguration() != null && RetrieveRequest.getRetrieveRequest_Extension_RetrievalConfiguration().getNumberOfResults() != null) {
			awsRequestBuilder.retrievalConfiguration(createAwsRetrievalConfiguration());
		}
		
		return awsRequestBuilder.build();
	}
	
	private software.amazon.awssdk.services.bedrockagentruntime.model.KnowledgeBaseQuery createRetrievalQuery() throws CoreException {
		Request commonRequest = RetrieveRequest.getRetrieveRequest_Extension_Request();
		var awsRetrievalQuery = software.amazon.awssdk.services.bedrockagentruntime.model.KnowledgeBaseQuery.builder()
				.text(this.getInputText(commonRequest))
				.build();
		return awsRetrievalQuery;
	}
	
	
	
	private software.amazon.awssdk.services.bedrockagentruntime.model.KnowledgeBaseRetrievalConfiguration createAwsRetrievalConfiguration() throws CoreException {
		var awsKnowledgeBaseVectorSearchConfiguration = software.amazon.awssdk.services.bedrockagentruntime.model.KnowledgeBaseVectorSearchConfiguration.builder()
				.numberOfResults(this.RetrieveRequest.getRetrieveRequest_Extension_RetrievalConfiguration().getNumberOfResults())
				.build();
		
		var awsRetrievalConfiguration = software.amazon.awssdk.services.bedrockagentruntime.model.KnowledgeBaseRetrievalConfiguration.builder()
				.vectorSearchConfiguration(awsKnowledgeBaseVectorSearchConfiguration)
				.build();
		
		return awsRetrievalConfiguration;
	}
	
	private RetrieveResponse createMxResponse(software.amazon.awssdk.services.bedrockagentruntime.model.RetrieveResponse awsResponse) {
		RetrieveResponse mxResponse = new RetrieveResponse(getContext());
		mxResponse.setNextToken(awsResponse.nextToken());
		
		// Have a list of GenAiCommons.Reference objects
		List<Reference> referenceList = new ArrayList<>();
		awsResponse.retrievalResults().forEach(awsRetrievalResult -> {
			
			String sourceURL = "";
			RetrievalResult mxRetrievalResult = new RetrievalResult(getContext());
			mxRetrievalResult.setScore(BigDecimal.valueOf(awsRetrievalResult.score()));
			mxRetrievalResult.setContent(awsRetrievalResult.content().text());
			
			if (awsRetrievalResult.location().s3Location() != null) {
			sourceURL= awsRetrievalResult.location().s3Location().uri();
			
			mxRetrievalResult.setSourceType(ENUM_SourceType.Url) ;	
			
			}
			else {
			sourceURL = "UnSupported Source type ";
			mxRetrievalResult.setSourceType(null) ;
			LOGGER.debug("An unknown data source type was returned by the Amazon Bedrock service.");
			}
			mxRetrievalResult.setSource(sourceURL);
			referenceList.add(mxRetrievalResult);
		});
		
		
		// Have a single GenAICommons.Message object
		Message responseMsg = new Message(getContext());
		// Associate the list of Reference objects to the Message object
		responseMsg.setMessage_Reference(referenceList);
		
		// Associate the Message to the Response object
		mxResponse.setResponse_Message(responseMsg);
		
				
		
		return mxResponse;
	}
	
	
	// END EXTRA CODE
}
