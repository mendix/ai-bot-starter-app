// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package conversationalui.actions;

import static java.util.Objects.requireNonNull;
import java.util.ArrayList;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import conversationalui.impl.MxLogger;
import conversationalui.proxies.EntityAttribute;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive;

public class EntityAttribute_GetList extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private final java.lang.String EntityName;

	public EntityAttribute_GetList(
		IContext context,
		java.lang.String _entityName
	)
	{
		super(context);
		this.EntityName = _entityName;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			requireNonNull(EntityName, "EntityName is required.");
			
			IMetaObject entity = Core.getMetaObject(EntityName);
			requireNonNull(entity,"Entity with name "+ EntityName +" was not found in any domain model of this app.");
			
			ArrayList<IMendixObject> attributeList = new ArrayList<IMendixObject>();
			for(IMetaPrimitive attributePrimitive : entity.getMetaPrimitives()) {
				
				IMendixObject attribute = Core.instantiate(getContext(),EntityAttribute.getType());
				attribute.setValue(getContext(), EntityAttribute.MemberNames.AttributeName.toString(), attributePrimitive.getName());
				attribute.setValue(getContext(), EntityAttribute.MemberNames.AttributeType.toString(), attributePrimitive.getType().toString());
				attributeList.add(attribute);
			}
			return attributeList;	
			} catch (Exception e) {
				LOGGER.error(e);
				return null;
		}

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "EntityAttribute_GetList";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(EntityAttribute_GetList.class);
	
	// END EXTRA CODE
}
